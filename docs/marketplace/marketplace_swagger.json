{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "title": "exapp-go marketplace api",
        "contact": {},
        "version": "1.0"
    },
    "host": "127.0.0.1:8080",
    "basePath": "/",
    "paths": {
        "/api/v1/balances": {
            "get": {
                "description": "Get user balances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user balances",
                "responses": {
                    "200": {
                        "description": "user balances",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.UserBalance"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/depth": {
            "get": {
                "description": "Get order book by pool id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "depth"
                ],
                "summary": "Get depth",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pool_id",
                        "name": "pool_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "0.00000001 ~ 10000",
                        "name": "precision",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "order depth",
                        "schema": {
                            "$ref": "#/definitions/entity.Depth"
                        }
                    }
                }
            }
        },
        "/api/v1/klines": {
            "get": {
                "description": "Get kline data by pool id and interval",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kline"
                ],
                "summary": "Get kline data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pool id",
                        "name": "pool_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "1m",
                            "5m",
                            "15m",
                            "30m",
                            "1h",
                            "4h",
                            "1d",
                            "1w",
                            "1M"
                        ],
                        "type": "string",
                        "description": "interval",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "start timestamp",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "end timestamp",
                        "name": "end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "kline data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Kline"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/latest-trades": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get latest trades",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trade"
                ],
                "summary": "Get latest trades",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pool_id",
                        "name": "pool_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit count",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "trade list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Trade"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/pools": {
            "get": {
                "description": "Get a list of all trading pools",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pools"
                ],
                "summary": "List all trading pools",
                "parameters": [
                    {
                        "type": "string",
                        "description": "base coin",
                        "name": "base_coin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "quote coin",
                        "name": "quote_coin",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pool info",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.PoolStats"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/pools/{symbolOrId}": {
            "get": {
                "description": "Get detailed information about a specific trading pool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pools"
                ],
                "summary": "Get pool details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pool symbol or pool id",
                        "name": "symbolOrId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Pool"
                        }
                    }
                }
            }
        },
        "/credentials": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user credentials",
                "responses": {
                    "200": {
                        "description": "user credentials",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.RespUserCredential"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create user credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create user credentials",
                "parameters": [
                    {
                        "description": "create user credential params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UserCredential"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/credentials/{credential_id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete user credential by credential_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete user credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "credential id",
                        "name": "credential_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/deposit": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deposit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deposit"
                ],
                "summary": "Deposit",
                "parameters": [
                    {
                        "description": "deposit params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ReqDeposit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.RespDeposit"
                        }
                    }
                }
            }
        },
        "/deposit-history": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get deposit history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deposit"
                ],
                "summary": "Get deposit history",
                "responses": {
                    "200": {
                        "description": "deposit records",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.RespDepositRecord"
                            }
                        }
                    }
                }
            }
        },
        "/eos/pay-cpu": {
            "post": {
                "description": "pay cpu for user tx",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eos"
                ],
                "summary": "pay cpu",
                "parameters": [
                    {
                        "description": "signed tx",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ReqPayCPU"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "txid",
                        "schema": {
                            "$ref": "#/definitions/entity.RespPayCPU"
                        }
                    }
                }
            }
        },
        "/faucet": {
            "post": {
                "description": "Claim faucet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "faucet"
                ],
                "summary": "Claim faucet",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ReqClaimFaucet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "txid",
                        "schema": {
                            "$ref": "#/definitions/entity.RespClaimFaucet"
                        }
                    }
                }
            }
        },
        "/first-deposit": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "First deposit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deposit"
                ],
                "summary": "First deposit",
                "parameters": [
                    {
                        "description": "first deposit params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ReqFirstDeposit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.RespFirstDeposit"
                        }
                    }
                }
            }
        },
        "/history-orders": {
            "get": {
                "description": "Get history orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get history orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pool_id",
                        "name": "pool_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "eos account name",
                        "name": "trader",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "0 buy 1 sell",
                        "name": "side",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "0 market 1limit",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "history orders",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Order"
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "login params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ReqUserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/open-orders": {
            "get": {
                "description": "Get open orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get open orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pool_id",
                        "name": "pool_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "0 buy 1 sell",
                        "name": "side",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "open order list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.OpenOrder"
                            }
                        }
                    }
                }
            }
        },
        "/orders/clear-unread": {
            "post": {
                "description": "Clear all unread orders for a trader",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Clear all unread orders",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/orders/{id}": {
            "get": {
                "description": "Get history order detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get history order detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pool_id+order_id+side,ps:0-1-0 pool_id = 0,order_id = 1,side = buy",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "history order detail",
                        "schema": {
                            "$ref": "#/definitions/entity.OrderDetail"
                        }
                    }
                }
            }
        },
        "/sub-accounts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all sub-accounts for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get sub-accounts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.SubAccountInfo"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new sub-account for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Add sub-account",
                "parameters": [
                    {
                        "description": "add sub-account params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ReqAddSubAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.RespAddSubAccount"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a sub-account by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete sub-account",
                "parameters": [
                    {
                        "description": "delete sub-account params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ReqDeleteSubAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.RespDeleteSubAccount"
                        }
                    }
                }
            }
        },
        "/support-tokens": {
            "get": {
                "description": "Get support tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Get support tokens",
                "responses": {
                    "200": {
                        "description": "token list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Token"
                            }
                        }
                    }
                }
            }
        },
        "/sys-trade-info": {
            "get": {
                "description": "Get system trade information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Get system trade information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.SysTradeInfo"
                        }
                    }
                }
            }
        },
        "/system-info": {
            "get": {
                "description": "Get system information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Get system information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.SystemInfo"
                        }
                    }
                }
            }
        },
        "/token/{symbol}": {
            "get": {
                "description": "Get token info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Get token info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "coin symbol,ps BTC",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token info",
                        "schema": {
                            "$ref": "#/definitions/entity.Token"
                        }
                    }
                }
            }
        },
        "/trade-competition/accumulated-ranking": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get top 20 users accumulated profit ranking for specified time range, and current user's ranking and profit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trade competition"
                ],
                "summary": "Get user accumulated profit ranking",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "begin timestamp",
                        "name": "begin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "end timestamp",
                        "name": "end",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserProfitRank"
                        }
                    }
                }
            }
        },
        "/trade-competition/day-ranking": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get top 20 users profit ranking for specified date, and current user's ranking and profit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trade competition"
                ],
                "summary": "Get user daily profit ranking",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "UTC0 timezone date start timestamp",
                        "name": "timestamp",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserProfitRank"
                        }
                    }
                }
            }
        },
        "/trade-competition/total-trade-stats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get total trade stats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trade competition"
                ],
                "summary": "Get total trade stats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TotalTradeStats"
                        }
                    }
                }
            }
        },
        "/unread-orders": {
            "get": {
                "description": "Check if user has any unread completed orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Check for unread orders",
                "responses": {
                    "200": {
                        "description": "Response for unread status",
                        "schema": {
                            "$ref": "#/definitions/entity.RespUnreadOrder"
                        }
                    }
                }
            }
        },
        "/user-info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user info",
                "responses": {
                    "200": {
                        "description": "user info",
                        "schema": {
                            "$ref": "#/definitions/entity.RespUserInfo"
                        }
                    }
                }
            }
        },
        "/user/invitation": {
            "get": {
                "description": "Get invitation info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-invitation"
                ],
                "summary": "获取邀请信息",
                "responses": {}
            }
        },
        "/user/invitation/link": {
            "post": {
                "description": "Create invitation link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-invitation"
                ],
                "summary": "创建邀请链接",
                "parameters": [
                    {
                        "description": "create invitation link params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.UILinkParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "invitation link",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/user/invitation/link/{code}": {
            "get": {
                "description": "Get invitation link by code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-invitation"
                ],
                "summary": "获取邀请链接信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "invitation link",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Bind invitation link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-invitation"
                ],
                "summary": "绑定邀请链接",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/invitation/link/{link_id}": {
            "delete": {
                "description": "Delete invitation link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-invitation"
                ],
                "summary": "删除邀请链接",
                "parameters": [
                    {
                        "type": "string",
                        "description": "link id",
                        "name": "link_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/invitation/links": {
            "get": {
                "description": "Get invitation links",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-invitation"
                ],
                "summary": "获取邀请链接列表",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.UILinkListParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "invitation links",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/user/invites": {
            "get": {
                "description": "Get invite users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-invitation"
                ],
                "summary": "获取邀请用户列表",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.UserInvitationListParam"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/user/invites/{code}": {
            "get": {
                "description": "Get invite users by code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-invitation"
                ],
                "summary": "获取邀请链接用户列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.UserInvitationListParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "invite users",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/user/points": {
            "get": {
                "description": "获取积分信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-points"
                ],
                "summary": "获取积分信息",
                "responses": {
                    "200": {
                        "description": "points info",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/user/points/conf": {
            "get": {
                "description": "获取积分配置",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-points"
                ],
                "summary": "获取积分配置",
                "responses": {
                    "200": {
                        "description": "points conf",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "更新积分配置",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-points"
                ],
                "summary": "更新积分配置",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.UserPointsConfParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "points conf",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/user/points/records": {
            "get": {
                "description": "获取积分记录",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-points"
                ],
                "summary": "获取积分记录",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.UPRecordListParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "points records",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/withdrawal-history": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get withdrawal history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "withdrawal"
                ],
                "summary": "Get withdrawal history",
                "responses": {
                    "200": {
                        "description": "withdrawal records",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.RespWithdrawRecord"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "meta": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "data.UILinkListParam": {
            "type": "object",
            "required": [
                "current",
                "pageSize"
            ],
            "properties": {
                "close_count": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string"
                },
                "count_column": {
                    "type": "string"
                },
                "current": {
                    "description": "页面",
                    "type": "integer"
                },
                "keyword": {
                    "type": "string"
                },
                "only_count": {
                    "type": "boolean"
                },
                "order": {
                    "type": "string"
                },
                "pageSize": {
                    "description": "页码",
                    "type": "integer",
                    "maximum": 1000
                },
                "summary_info": {
                    "type": "boolean"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "data.UILinkParam": {
            "type": "object",
            "properties": {
                "percent": {
                    "type": "integer"
                }
            }
        },
        "data.UPRecordListParam": {
            "type": "object",
            "required": [
                "current",
                "pageSize"
            ],
            "properties": {
                "close_count": {
                    "type": "boolean"
                },
                "count_column": {
                    "type": "string"
                },
                "current": {
                    "description": "页面",
                    "type": "integer"
                },
                "interval": {
                    "type": "integer"
                },
                "keyword": {
                    "type": "string"
                },
                "method": {
                    "$ref": "#/definitions/types.UserPointsMethod"
                },
                "only_count": {
                    "type": "boolean"
                },
                "order": {
                    "type": "string"
                },
                "pageSize": {
                    "description": "页码",
                    "type": "integer",
                    "maximum": 1000
                },
                "remark": {
                    "type": "string"
                },
                "summary_info": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "integer"
                },
                "tx_id": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/types.UserPointsType"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "data.UserInvitationListParam": {
            "type": "object",
            "required": [
                "current",
                "pageSize"
            ],
            "properties": {
                "close_count": {
                    "type": "boolean"
                },
                "count_column": {
                    "type": "string"
                },
                "current": {
                    "description": "页面",
                    "type": "integer"
                },
                "invite_code": {
                    "type": "string"
                },
                "inviter": {
                    "type": "string"
                },
                "keyword": {
                    "type": "string"
                },
                "only_count": {
                    "type": "boolean"
                },
                "order": {
                    "type": "string"
                },
                "pageSize": {
                    "description": "页码",
                    "type": "integer",
                    "maximum": 1000
                },
                "summary_info": {
                    "type": "boolean"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "data.UserPointsConfParam": {
            "type": "object",
            "properties": {
                "base_trade_points": {
                    "type": "integer"
                },
                "first_trade_rate": {
                    "type": "integer"
                },
                "invite_percent": {
                    "type": "integer"
                },
                "invite_rebate_percent": {
                    "type": "integer"
                },
                "maker_weight": {
                    "type": "integer"
                },
                "max_invite_link_count": {
                    "type": "integer"
                },
                "max_per_invite_points": {
                    "type": "integer"
                },
                "max_per_trade_points": {
                    "type": "integer"
                },
                "order_min_pending_time": {
                    "type": "integer"
                },
                "order_min_value": {
                    "type": "integer"
                },
                "taker_weight": {
                    "type": "integer"
                },
                "upgrade_invite_percent": {
                    "type": "integer"
                },
                "upgrade_inviter_count": {
                    "type": "integer"
                }
            }
        },
        "entity.Chain": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "chain_name": {
                    "type": "string"
                },
                "exsat_token_address": {
                    "type": "string"
                },
                "exsat_withdraw_fee": {
                    "type": "string"
                },
                "min_deposit_amount": {
                    "type": "string"
                },
                "min_withdraw_amount": {
                    "type": "string"
                },
                "withdraw_fee": {
                    "type": "string"
                }
            }
        },
        "entity.Depth": {
            "type": "object",
            "properties": {
                "asks": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "bids": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "pool_id": {
                    "type": "integer"
                },
                "precision": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "entity.ExsatNetwork": {
            "type": "object",
            "properties": {
                "block_explorer_url": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "currency_symbol": {
                    "type": "string"
                },
                "network_name": {
                    "type": "string"
                },
                "network_url": {
                    "type": "string"
                }
            }
        },
        "entity.Kline": {
            "type": "object",
            "properties": {
                "close": {
                    "type": "number"
                },
                "count": {
                    "type": "integer"
                },
                "high": {
                    "type": "number"
                },
                "interval": {
                    "type": "string"
                },
                "low": {
                    "type": "number"
                },
                "open": {
                    "type": "number"
                },
                "pool_id": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "turnover": {
                    "type": "number"
                },
                "volume": {
                    "type": "number"
                }
            }
        },
        "entity.LockBalance": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string"
                },
                "pool_id": {
                    "type": "integer"
                },
                "pool_symbol": {
                    "type": "string"
                }
            }
        },
        "entity.OpenOrder": {
            "type": "object",
            "properties": {
                "avg_price": {
                    "type": "string"
                },
                "base_coin_precision": {
                    "type": "integer"
                },
                "executed_amount": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "order_amount": {
                    "type": "string"
                },
                "order_cid": {
                    "type": "string"
                },
                "order_id": {
                    "type": "integer"
                },
                "order_price": {
                    "type": "string"
                },
                "order_time": {
                    "type": "string"
                },
                "order_total": {
                    "type": "string"
                },
                "pool_base_coin": {
                    "type": "string"
                },
                "pool_id": {
                    "type": "integer"
                },
                "pool_quote_coin": {
                    "type": "string"
                },
                "pool_symbol": {
                    "type": "string"
                },
                "quote_coin_precision": {
                    "type": "integer"
                },
                "side": {
                    "description": "0 buy 1 sell",
                    "type": "integer"
                },
                "trader": {
                    "type": "string"
                },
                "type": {
                    "description": "0 market 1 limit",
                    "type": "integer"
                }
            }
        },
        "entity.Order": {
            "type": "object",
            "properties": {
                "avg_price": {
                    "type": "string"
                },
                "base_coin_precision": {
                    "type": "integer"
                },
                "executed_amount": {
                    "type": "string"
                },
                "filled_total": {
                    "type": "string"
                },
                "history": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "order_amount": {
                    "type": "string"
                },
                "order_cid": {
                    "type": "string"
                },
                "order_id": {
                    "type": "integer"
                },
                "order_price": {
                    "type": "string"
                },
                "order_time": {
                    "type": "string"
                },
                "order_total": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "pool_base_coin": {
                    "type": "string"
                },
                "pool_id": {
                    "type": "integer"
                },
                "pool_quote_coin": {
                    "type": "string"
                },
                "pool_symbol": {
                    "type": "string"
                },
                "quote_coin_precision": {
                    "type": "integer"
                },
                "side": {
                    "description": "0 buy 1 sell",
                    "type": "integer"
                },
                "status": {
                    "description": "0 open 1partially_filled 2full_filled 3.canceled",
                    "type": "integer"
                },
                "trader": {
                    "type": "string"
                },
                "type": {
                    "description": "0 market 1 limit",
                    "type": "integer"
                },
                "unread": {
                    "type": "boolean"
                }
            }
        },
        "entity.OrderDetail": {
            "type": "object",
            "properties": {
                "avg_price": {
                    "type": "string"
                },
                "base_coin_precision": {
                    "type": "integer"
                },
                "executed_amount": {
                    "type": "string"
                },
                "filled_total": {
                    "type": "string"
                },
                "history": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "order_amount": {
                    "type": "string"
                },
                "order_cid": {
                    "type": "string"
                },
                "order_id": {
                    "type": "integer"
                },
                "order_price": {
                    "type": "string"
                },
                "order_time": {
                    "type": "string"
                },
                "order_total": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "pool_base_coin": {
                    "type": "string"
                },
                "pool_id": {
                    "type": "integer"
                },
                "pool_quote_coin": {
                    "type": "string"
                },
                "pool_symbol": {
                    "type": "string"
                },
                "quote_coin_precision": {
                    "type": "integer"
                },
                "side": {
                    "description": "0 buy 1 sell",
                    "type": "integer"
                },
                "status": {
                    "description": "0 open 1partially_filled 2full_filled 3.canceled",
                    "type": "integer"
                },
                "trader": {
                    "type": "string"
                },
                "trades": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.TradeDetail"
                    }
                },
                "type": {
                    "description": "0 market 1 limit",
                    "type": "integer"
                },
                "unread": {
                    "type": "boolean"
                }
            }
        },
        "entity.PayCPU": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                }
            }
        },
        "entity.Pool": {
            "type": "object",
            "properties": {
                "asking_time": {
                    "type": "string"
                },
                "base_coin": {
                    "type": "string"
                },
                "base_coin_precision": {
                    "type": "integer"
                },
                "base_contract": {
                    "type": "string"
                },
                "base_symbol": {
                    "type": "string"
                },
                "maker_fee_rate": {
                    "type": "number"
                },
                "max_flct": {
                    "type": "integer"
                },
                "min_amount": {
                    "type": "string"
                },
                "pool_id": {
                    "type": "integer"
                },
                "pool_stats": {
                    "$ref": "#/definitions/entity.PoolStats"
                },
                "price_precision": {
                    "type": "integer"
                },
                "quote_coin": {
                    "type": "string"
                },
                "quote_coin_precision": {
                    "type": "integer"
                },
                "quote_contract": {
                    "type": "string"
                },
                "quote_symbol": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                },
                "taker_fee_rate": {
                    "type": "number"
                },
                "trading_time": {
                    "type": "string"
                }
            }
        },
        "entity.PoolStats": {
            "type": "object",
            "properties": {
                "base_coin": {
                    "type": "string"
                },
                "change": {
                    "type": "string"
                },
                "change_rate": {
                    "type": "number"
                },
                "high": {
                    "type": "string"
                },
                "last_price": {
                    "type": "string"
                },
                "low": {
                    "type": "string"
                },
                "pool_id": {
                    "type": "integer"
                },
                "quote_coin": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "trades": {
                    "type": "integer"
                },
                "turnover": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "volume": {
                    "type": "string"
                }
            }
        },
        "entity.ReqAddSubAccount": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "sub account name",
                    "type": "string"
                },
                "permission": {
                    "description": "eos permission",
                    "type": "string"
                }
            }
        },
        "entity.ReqClaimFaucet": {
            "type": "object",
            "properties": {
                "deposit_address": {
                    "type": "string"
                }
            }
        },
        "entity.ReqDeleteSubAccount": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.ReqDeposit": {
            "type": "object",
            "required": [
                "chain_name",
                "symbol"
            ],
            "properties": {
                "chain_name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "entity.ReqFirstDeposit": {
            "type": "object",
            "required": [
                "chain_name",
                "public_key",
                "symbol"
            ],
            "properties": {
                "chain_name": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "entity.ReqPayCPU": {
            "type": "object",
            "required": [
                "single_signed_transaction"
            ],
            "properties": {
                "public_key": {
                    "type": "string"
                },
                "single_signed_transaction": {
                    "type": "string"
                }
            }
        },
        "entity.ReqUserLogin": {
            "type": "object",
            "properties": {
                "evm_address": {
                    "description": "for evm user",
                    "type": "string"
                },
                "id_token": {
                    "type": "string"
                },
                "invite_code": {
                    "description": "Invite Code",
                    "type": "string"
                },
                "method": {
                    "description": "google,apple,telegram,evm",
                    "type": "string"
                },
                "telegram_data": {
                    "$ref": "#/definitions/entity.TelegramData"
                },
                "user_name": {
                    "description": "for apple",
                    "type": "string"
                }
            }
        },
        "entity.RespAddSubAccount": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                }
            }
        },
        "entity.RespClaimFaucet": {
            "type": "object",
            "properties": {
                "tx_hash": {
                    "type": "string"
                }
            }
        },
        "entity.RespDeleteSubAccount": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "entity.RespDeposit": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "entity.RespDepositRecord": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "chain_name": {
                    "type": "string"
                },
                "deposit_address": {
                    "type": "string"
                },
                "deposit_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "source_tx_id": {
                    "type": "string"
                },
                "status": {
                    "description": "0 pending 1success 2 fail",
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "entity.RespFirstDeposit": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "entity.RespPayCPU": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string"
                }
            }
        },
        "entity.RespUnreadOrder": {
            "type": "object",
            "properties": {
                "has_unread": {
                    "type": "boolean"
                }
            }
        },
        "entity.RespUserCredential": {
            "type": "object",
            "properties": {
                "aaguid": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "credential_id": {
                    "type": "string"
                },
                "device_id": {
                    "type": "string"
                },
                "eos_account": {
                    "type": "string"
                },
                "eos_permission": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "last_used_at": {
                    "type": "string"
                },
                "last_used_ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "synced": {
                    "type": "boolean"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "entity.RespUserInfo": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "eos_account": {
                    "type": "string"
                },
                "evm_address": {
                    "description": "for evm user",
                    "type": "string"
                },
                "passkeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.RespUserCredential"
                    }
                },
                "permission": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "entity.RespWithdrawRecord": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "chain_name": {
                    "type": "string"
                },
                "completed_at": {
                    "type": "string"
                },
                "fee": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "recipient": {
                    "type": "string"
                },
                "send_tx_id": {
                    "type": "string"
                },
                "status": {
                    "description": "0 pending 1success 2 fail",
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                },
                "withdraw_at": {
                    "type": "string"
                }
            }
        },
        "entity.SubAccountBalance": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string"
                },
                "coin": {
                    "type": "string"
                },
                "locked": {
                    "type": "string"
                },
                "locks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.LockBalance"
                    }
                },
                "usdt_price": {
                    "type": "string"
                }
            }
        },
        "entity.SubAccountInfo": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "balances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.SubAccountBalance"
                    }
                },
                "eos_account": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "public_keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "entity.SysTradeInfo": {
            "type": "object",
            "properties": {
                "total_trades": {
                    "type": "integer"
                },
                "total_user_count": {
                    "type": "integer"
                },
                "total_volume": {
                    "type": "number"
                }
            }
        },
        "entity.SystemInfo": {
            "type": "object",
            "properties": {
                "app_contract": {
                    "type": "string"
                },
                "evm_agent_contract": {
                    "type": "string"
                },
                "exsat_network": {
                    "$ref": "#/definitions/entity.ExsatNetwork"
                },
                "pay_cpu": {
                    "$ref": "#/definitions/entity.PayCPU"
                },
                "token_contract": {
                    "type": "string"
                },
                "trading_competition": {
                    "$ref": "#/definitions/entity.TradingCompetition"
                },
                "vault_eos_address": {
                    "type": "string"
                },
                "vault_evm_address": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "entity.TelegramData": {
            "type": "object",
            "properties": {
                "auth_date": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entity.Token": {
            "type": "object",
            "properties": {
                "decimals": {
                    "type": "integer"
                },
                "eos_contract": {
                    "type": "string"
                },
                "evm_address": {
                    "type": "string"
                },
                "icon_url": {
                    "type": "string"
                },
                "info": {
                    "$ref": "#/definitions/entity.TokenInfo"
                },
                "name": {
                    "type": "string"
                },
                "support_chain": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Chain"
                    }
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "entity.TokenInfo": {
            "type": "object",
            "properties": {
                "circulating_supply": {
                    "type": "string"
                },
                "fully_diluted_market_cap": {
                    "type": "string"
                },
                "historical_high": {
                    "type": "string"
                },
                "historical_high_date": {
                    "type": "string"
                },
                "historical_low": {
                    "type": "string"
                },
                "historical_low_date": {
                    "type": "string"
                },
                "intro": {
                    "type": "string"
                },
                "issue_date": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.TokenLink"
                    }
                },
                "market_capitalization": {
                    "type": "string"
                },
                "market_dominance": {
                    "type": "string"
                },
                "maximum_supply": {
                    "type": "string"
                },
                "rank": {
                    "type": "string"
                },
                "total_supply": {
                    "type": "string"
                },
                "volume": {
                    "type": "string"
                },
                "volume_div_market_cap": {
                    "type": "string"
                }
            }
        },
        "entity.TokenLink": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "entity.TotalTradeStats": {
            "type": "object",
            "properties": {
                "total_points_issued": {
                    "type": "integer"
                },
                "total_trade_user": {
                    "type": "integer"
                },
                "total_trade_volume": {
                    "type": "number"
                },
                "user_claimed_faucet": {
                    "type": "boolean"
                },
                "user_points": {
                    "type": "integer"
                }
            }
        },
        "entity.Trade": {
            "type": "object",
            "properties": {
                "buyer": {
                    "type": "string"
                },
                "pool_id": {
                    "type": "integer"
                },
                "price": {
                    "type": "string"
                },
                "quantity": {
                    "type": "string"
                },
                "seller": {
                    "type": "string"
                },
                "side": {
                    "$ref": "#/definitions/entity.TradeSide"
                },
                "traded_at": {
                    "type": "string"
                }
            }
        },
        "entity.TradeDetail": {
            "type": "object",
            "properties": {
                "base_coin": {
                    "type": "string"
                },
                "base_quantity": {
                    "type": "string"
                },
                "global_seq": {
                    "type": "integer"
                },
                "maker": {
                    "type": "string"
                },
                "maker_fee": {
                    "type": "string"
                },
                "maker_order_cid": {
                    "type": "string"
                },
                "maker_order_id": {
                    "type": "integer"
                },
                "maker_permission": {
                    "type": "string"
                },
                "pool_id": {
                    "type": "integer"
                },
                "price": {
                    "type": "string"
                },
                "quote_coin": {
                    "type": "string"
                },
                "quote_quantity": {
                    "type": "string"
                },
                "taker": {
                    "type": "string"
                },
                "taker_fee": {
                    "type": "string"
                },
                "taker_is_bid": {
                    "type": "boolean"
                },
                "taker_order_cid": {
                    "type": "string"
                },
                "taker_order_id": {
                    "type": "integer"
                },
                "taker_permission": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "tx_id": {
                    "type": "string"
                }
            }
        },
        "entity.TradeSide": {
            "type": "string",
            "enum": [
                "buy",
                "sell"
            ],
            "x-enum-varnames": [
                "TradeSideBuy",
                "TradeSideSell"
            ]
        },
        "entity.TradingCompetition": {
            "type": "object",
            "properties": {
                "accumulated_points": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "begin_time": {
                    "type": "string"
                },
                "daily_points": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "end_time": {
                    "type": "string"
                }
            }
        },
        "entity.UserBalance": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string"
                },
                "coin": {
                    "type": "string"
                },
                "depositing": {
                    "type": "string"
                },
                "locked": {
                    "type": "string"
                },
                "locks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.LockBalance"
                    }
                },
                "usdt_price": {
                    "type": "string"
                },
                "withdrawing": {
                    "type": "string"
                }
            }
        },
        "entity.UserCredential": {
            "type": "object",
            "properties": {
                "aaguid": {
                    "type": "string"
                },
                "credential_id": {
                    "type": "string"
                },
                "device_id": {
                    "type": "string"
                },
                "eos_account": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "synced": {
                    "type": "boolean"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "entity.UserProfit": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "point": {
                    "type": "integer"
                },
                "profit": {
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "entity.UserProfitRank": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.UserProfit"
                    }
                },
                "point": {
                    "type": "integer"
                },
                "rank": {
                    "type": "integer"
                },
                "user_profit": {
                    "type": "string"
                }
            }
        },
        "types.UserPointsMethod": {
            "type": "string",
            "enum": [
                "in",
                "out"
            ],
            "x-enum-varnames": [
                "UserPointsMethodIn",
                "UserPointsMethodOut"
            ]
        },
        "types.UserPointsType": {
            "type": "string",
            "enum": [
                "trade",
                "active",
                "manual",
                "invitation"
            ],
            "x-enum-comments": {
                "UserPointsTypeActive": "活动",
                "UserPointsTypeInvitation": "邀请",
                "UserPointsTypeManual": "手动",
                "UserPointsTypeTrade": "交易"
            },
            "x-enum-varnames": [
                "UserPointsTypeTrade",
                "UserPointsTypeActive",
                "UserPointsTypeManual",
                "UserPointsTypeInvitation"
            ]
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}